[tool.poetry]
name        = "decrypto-api"
version     = "0.1.0"
description = "Decrypto API"
authors     = [ "Your Name <you@example.com>" ]
license     = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
alembic = "^1.7.5"
asyncpg = "^0.25.0"
colorama = "^0.4.4"
Cython = "^0.29.25"
emails = "^0.6"
fastapi = "^0.70.0"
gunicorn = "^20.1.0"
Jinja2 = "^3.0.3"
passlib = { extras = [ "argon2" ], version = "^1.7.4" }
psycopg2 = "^2.9.2"
pydantic = { git = "https://github.com/samuelcolvin/pydantic.git", rev = "cc1cb4826c74ac5b651ef2d80c3478428a9950ca", extras = [
    "dotenv",
    "email",
] }
python-jose = { extras = [ "cryptography" ], version = "^3.3.0" }
python-multipart = "^0.0.5"
SQLAlchemy = { extras = [ "asyncio" ], version = "^1.4.27" }
starlette-context = "^0.3.3"
structlog = "^21.3.0"
tenacity = "^8.0.1"
uvicorn = { extras = [ "standard" ], version = "^0.16.0" }

[tool.poetry.dev-dependencies]
asgi-lifespan     = { version = "^1.0.1", allow-prereleases = true }
black             = { version = "^21.12b0", allow-prereleases = true }
docformatter      = { version = "^1.4", allow-prereleases = true }
httpx             = { version = "^0.21.1", allow-prereleases = true }
isort             = { version = "^5.10.1", allow-prereleases = true }
mypy              = { version = "^0.910", allow-prereleases = true }
pylint            = { version = "^2.12.2", allow-prereleases = true }
pytest            = { version = "^6.2.5", allow-prereleases = true }
pytest-asyncio    = { version = "^0.16.0", allow-prereleases = true }
pytest-cov        = { version = "^3.0.0", allow-prereleases = true }
sqlalchemy2-stubs = { version = "^0.0.2a19", allow-prereleases = true }

[build-system]
requires      = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"

# Configuration for other tools

[tool.coverage.run]
omit = [
    "app/db/init_db.py",
    "app/initial_data.py",
    "app/pre_start.py",
    "app/tests_pre_start.py",
    "app/tests/*",
]

[tool.isort]
profile           = "black"
known_first_party = [ "app" ]

[tool.mypy]
disallow_untyped_defs = true
plugins               = [ "sqlalchemy.ext.mypy.plugin" ]

[tool.pylint.master]
extension-pkg-whitelist = "pydantic"

[tool.pylint.messages_control]
disable = []

[tool.pylint.reports]
output-format = "colorized"
