name: CI Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "**/pyproject.toml"
      - "**/poetry.lock"
      - "app/**"

  push:
    branches:
      - main
    paths:
      - "**/pyproject.toml"
      - "**/poetry.lock"
      - "app/**"

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_USER: decrypto_user
          POSTGRES_PASSWORD: decrypto_password
          POSTGRES_DB: decrypto_test

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5432:5432

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv if cache exists
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies if cache does not exist
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        env:
          SERVER_HOST: "http://localhost"
          PROJECT_NAME: "Decrypto"
          SECRET_KEY: "58ca50d1ced0317f38781111481d6daf10e41e925ebf70acf357dfb8b678e208"
          FIRST_SUPERUSER: "username@example.com"
          FIRST_SUPERUSER_USERNAME: "username"
          FIRST_SUPERUSER_PASSWORD: "user_password"
          FIRST_SUPERUSER_NAME: "Username"
          USERS_OPEN_REGISTRATION: "True"
          POSTGRES_SERVER: "localhost:5432"
          POSTGRES_USER: "decrypto_user"
          POSTGRES_PASSWORD: "decrypto_password"
          POSTGRES_DB: "decrypto"
          POSTGRES_TEST_DB: "decrypto_test"

        run: |
          source .venv/bin/activate
          export PYTHONPATH="."
          export SQLALCHEMY_WARN_20=true  # SQLAlchemy 2.0
          export PYTHONWARNINGS=error::DeprecationWarning  # SQLAlchemy 2.0
          python app/tests_pre_start.py
          pytest --cov=app --cov-config=pyproject.toml --cov-report=term-missing app/tests
